class SGDStatusBar : BaseStatusBar
{
    HUDFont sfont, invfont, msgfont;
    InventoryBarState diparms;

    transient cvar finisherbar;
    transient cvar finisherprompt;
    transient cvar hazmatbar;
    //transient cvar debug;

    override void Init()
    {
        super.Init();
        SetSize(0,320,240);

        Font fnt = "SGDHUDFONT";
        sfont = HUDFont.Create(fnt,0,Mono_Off,0,0);
        fnt = "SMALLFONT";
        invfont = HUDFont.Create(fnt,0,Mono_Off,0,0);
        msgfont = HUDFont.Create(fnt,0,Mono_Off,0,0);
        diparms = InventoryBarState.Create();
    }

    override void Draw(int state, double TicFrac)
    {
        super.Draw(state,TicFrac);

        if(state == HUD_StatusBar || state == HUD_Fullscreen)
        {
            BeginHUD();
            DrawHUD();
        }
    }

    void DrawHealthAndArmor()
    {
        DrawImage("HAFRAME",(52,-8),DI_SCREEN_LEFT_BOTTOM|DI_ITEM_LEFT_BOTTOM);
        DrawString(sfont,FormatNumber(CPlayer.health,3),(53,-29),DI_SCREEN_LEFT_BOTTOM|DI_TEXT_ALIGN_LEFT,Font.CR_RED);
        DrawString(sfont,FormatNumber(GetArmorAmount(),3),(89,-29),DI_SCREEN_LEFT_BOTTOM|DI_TEXT_ALIGN_LEFT,Font.CR_RED);
    }

    void DrawWeaponsAndAmmo()
    {
        DrawImage("AMMFRAME",(-4,-4),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM);
        DrawImage("WEPFRAME",(-52,-8),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM);

        Inventory ammo = GetCurrentAmmo();
        if(ammo != null)
        {
            if(ammo.GetClassName() == 'ArgentRifleHeat')
                DrawBar("ARGOHBAR","",GetAmount("ArgentRifleHeat"),GetMaxAmount("ArgentRifleHeat"),(-58,-17),0,0,DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM);
            else DrawString(sfont,FormatNumber(ammo.Amount,3),(-88,-29),DI_SCREEN_RIGHT_BOTTOM|DI_TEXT_ALIGN_CENTER,Font.CR_RED);

            // Well, this is embarrassing. I spent three entire days wracking my brain with different ways to
            // render the ammo icons, all of which produced fatal errors, and the solution that finally works
            // is the simplest one possible. I tried to needlessly overcomplicate the method when *this* was
            // all I had to do. Credit goes to Jarewill for pointing me to this direction.
            DrawInventoryIcon(CPlayer.ReadyWeapon,(-10,-16),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_RIGHT_BOTTOM);
        }

        DrawImage(CPlayer.HasWeaponsInSlot(0)? "WEPLIGHT" : "",(-63,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
        DrawImage(CPlayer.HasWeaponsInSlot(1)? "WEPLIGHT" : "",(-117,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
        DrawImage(CPlayer.HasWeaponsInSlot(2)? "WEPLIGHT" : "",(-111,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
        DrawImage(CPlayer.HasWeaponsInSlot(3)? "WEPLIGHT" : "",(-105,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
        DrawImage(CPlayer.HasWeaponsInSlot(4)? "WEPLIGHT" : "",(-99,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
        DrawImage(CPlayer.HasWeaponsInSlot(5)? "WEPLIGHT" : "",(-93,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
        DrawImage(CPlayer.HasWeaponsInSlot(6)? "WEPLIGHT" : "",(-87,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
        DrawImage(CPlayer.HasWeaponsInSlot(7)? "WEPLIGHT" : "",(-81,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
        DrawImage(CPlayer.HasWeaponsInSlot(8)? "WEPLIGHT" : "",(-75,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
        DrawImage(CPlayer.HasWeaponsInSlot(9)? "WEPLIGHT" : "",(-69,-14),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP);
    }

    void DrawFinisherBar()
    {
        finisherbar = CVar.FindCVar('sgd_displayfbar');
        bool drawfbar = finisherbar.GetBool();

        if(drawfbar && !automapactive)
        {
            DrawImage("FTBARFRM",(4,4),DI_SCREEN_LEFT_TOP|DI_ITEM_LEFT_TOP);
            DrawBar("FTBAR_FG","FTBAR_BG",GetAmount("FinisherToken"),GetMaxAmount("FinisherToken"),(10,10),0,0,DI_SCREEN_LEFT_TOP|DI_ITEM_LEFT_TOP);
        }
    }

    void DrawFinisherPrompt()
    {
        finisherprompt = CVar.FindCVar('sgd_finisherprompt');
        int prompttype = finisherprompt.GetInt();

        if(prompttype > 0)
        {
            if(CPlayer.mo.CountInv("FinisherToken") >= 300 && CPlayer.mo.CountInv("FinisherToken") < 600)
            {
                DrawString(msgfont,StringTable.Localize("$SGD_FMSG_LVL1READY"),(8,27),DI_SCREEN_LEFT_TOP|DI_ITEM_LEFT_TOP|DI_TEXT_ALIGN_LEFT,Font.CR_GREEN,(1.0-((level.maptime%16)*0.04)));

                if(prompttype == 2)
                {
                    DrawString(msgfont,StringTable.Localize("$SGD_FMSG_USE"),(8,35),DI_SCREEN_LEFT_TOP|DI_ITEM_LEFT_TOP|DI_TEXT_ALIGN_LEFT,Font.CR_GREEN,(1.0-((level.maptime%16)*0.04)));
                }
            }
            else if(CPlayer.mo.CountInv("FinisherToken") >= 600 && CPlayer.mo.CountInv("FinisherToken") < 900)
            {
                DrawString(msgfont,StringTable.Localize("$SGD_FMSG_LVL2READY"),(8,27),DI_SCREEN_LEFT_TOP|DI_ITEM_LEFT_TOP|DI_TEXT_ALIGN_LEFT,Font.CR_GREEN,(1.0-((level.maptime%16)*0.04)));

                if(prompttype == 2)
                {
                    DrawString(msgfont,StringTable.Localize("$SGD_FMSG_USE"),(8,35),DI_SCREEN_LEFT_TOP|DI_ITEM_LEFT_TOP|DI_TEXT_ALIGN_LEFT,Font.CR_GREEN,(1.0-((level.maptime%16)*0.04)));
                }
            }
            else if(CPlayer.mo.CountInv("FinisherToken") >= 900)
            {
                DrawString(msgfont,StringTable.Localize("$SGD_FMSG_LVL3READY"),(8,27),DI_SCREEN_LEFT_TOP|DI_ITEM_LEFT_TOP|DI_TEXT_ALIGN_LEFT,Font.CR_GREEN,(1.0-((level.maptime%16)*0.04)));

                if(prompttype == 2)
                {
                    DrawString(msgfont,StringTable.Localize("$SGD_FMSG_USE"),(8,35),DI_SCREEN_LEFT_TOP|DI_ITEM_LEFT_TOP|DI_TEXT_ALIGN_LEFT,Font.CR_GREEN,(1.0-((level.maptime%16)*0.04)));
                }
            }
        }
    }

    void DrawInvItem()
    {
        DrawImage("INVFRAME",(4,-4),DI_SCREEN_LEFT_BOTTOM|DI_ITEM_LEFT_BOTTOM);

        if(CPlayer.mo.InvSel != null)
        {
            DrawInventoryIcon(CPlayer.mo.InvSel,(10,-16),DI_SCREEN_LEFT_BOTTOM|DI_ITEM_LEFT_BOTTOM|DI_DIMDEPLETED);

            if(CPlayer.mo.InvSel.Amount > 1)
            {
                DrawString(invfont,FormatNumber(CPlayer.mo.InvSel.Amount,3),(39,-47),DI_SCREEN_LEFT_BOTTOM|DI_ITEM_RIGHT_TOP|DI_TEXT_ALIGN_RIGHT,Font.CR_GOLD);
            }
        }
    }

    void DrawHazmatTimer()
    {
        hazmatbar = CVar.FindCVar('sgd_displayhsbar');
        bool drawhsbar = hazmatbar.GetBool();

        if(drawhsbar && CPlayer.mo.CountInv("RadSuitTimer") > 0)
        {
            DrawBar("HSBAR_FG","HSBAR_BG",GetAmount("RadSuitTimer"),GetMaxAmount("RadSuitTimer"),(-8,8),0,1,DI_SCREEN_RIGHT_TOP|DI_ITEM_RIGHT_TOP);
        }
    }

    void DrawKeyIcons()
    {
        bool locks[6];

        for(int i = 0; i < 6; i++)
        {
            locks[i] = CPlayer.mo.CheckKeys(i+1,false,true);
        }

        if(locks[0]) { DrawImage("STKEYS2",(-95,-39),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP); }
        if(locks[1]) { DrawImage("STKEYS0",(-111,-39),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP); }
        if(locks[2]) { DrawImage("STKEYS1",(-103,-39),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP); }
        if(locks[3]) { DrawImage("STKEYS5",(-71,-40),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP); }
        if(locks[4]) { DrawImage("STKEYS3",(-87,-40),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP); }
        if(locks[5]) { DrawImage("STKEYS4",(-79,-40),DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_TOP); }
    }

    void DrawDemonizerTimers()
    {
        DrawBar("DBARL_FG","DBARL_BG",GetAmount("DemonizerTimer"),GetMaxAmount("DemonizerTimer"),(155,-8),0,1,DI_SCREEN_LEFT_BOTTOM|DI_ITEM_RIGHT_BOTTOM);
        DrawBar("DBARR_FG","DBARR_BG",GetAmount("DemonizerTimer"),GetMaxAmount("DemonizerTimer"),(-155,-8),0,0,DI_SCREEN_RIGHT_BOTTOM|DI_ITEM_LEFT_BOTTOM);
    }

    void DrawHUD()
    {
        if(CPlayer.mo.CountInv("DemonizerTimer") > 0)
        {
            DrawDemonizerTimers();
        }
        else
        {
            DrawHealthAndArmor();
            DrawWeaponsAndAmmo();
            DrawFinisherBar();
            DrawFinisherPrompt();
            DrawInvItem();
            DrawHazmatTimer();
            DrawKeyIcons();
        }
    }
}
