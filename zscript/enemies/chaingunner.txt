class SGDChaingunner : SGDMonster replaces ChaingunGuy
{
	Default
	{
		Health 70;
		Radius 20;
		Height 56;
		Mass 100;
		Speed 8;
		PainChance 170;
		//DamageFactor "HolyWater", 1.25;
		SeeSound "chainguy/sight";
		PainSound "chainguy/pain";
		DeathSound "chainguy/death";
		ActiveSound "chainguy/active";
		AttackSound "minigun/fire";
		Obituary "$OB_CHAINGUY";
		Dropitem "SGDMinigun";
	}
	States
	{
	Spawn:
		//CPOS A 0 A_JumpIf(GetCVar("sgd_spawnbehavior") == 1,"AltSpawn");
		CPOS AB 10 A_Look;
		Loop;
	AltSpawn:
		CPOS AABBCCDD 3 A_Wander;
		CPOS A 0 A_Look;
		Loop;
	See:
		CPOS AABBCCDD 3 A_Chase;
		Loop;
	Missile:
		CPOS E 0 { if(CVar.FindCVar('sgd_hitscanbehavior').GetInt() == 1) { SetStateLabel("AltMissile"); }}
		CPOS E 0 A_StartSound("minigun/windup");
		CPOS E 24 A_FaceTarget;
		CPOS FE 3 BRIGHT A_CPosAttack;
		CPOS F 1 A_CPosRefire;
		Goto Missile+3;
	AltMissile:
		CPOS E 0 A_StartSound("minigun/windup");
		CPOS E 24 A_FaceTarget;
		CPOS FE 3 BRIGHT A_CPosAltAttack;
		CPOS F 1 A_CPosRefire;
		Goto AltMissile+2;
	Pain:
		CPOS G 3;
		CPOS G 3 A_Pain;
		Goto See;
	Pain.HolyWater:
		CPOS G 3 A_SetTranslation("HolyWaterTrans");
		CPOS G 3 A_Pain;
		Goto See;
	Pain.Fire:
		CPOS G 3 A_SetTranslation("CharredTrans");
		CPOS G 3 A_Pain;
		Goto See;
	Death:
		CPOS H 5
		{
			A_GiveToTarget("ChaingunnersKilled");
			A_GiveToTarget("FinisherToken",12);
		}
		CPOS I 5 A_Scream;
		CPOS J 5 A_NoBlocking;
		CPOS KLM 5;
		CPOS N -1;
		Stop;
	Death.HolyWater:
		CPOS H 5
		{
			A_SetTranslation("HolyWaterTrans");
			A_GiveToTarget("ChaingunnersKilled");
			A_GiveToTarget("FinisherToken",12);
		}
		CPOS I 5 A_Scream;
		CPOS J 5 A_NoBlocking;
		CPOS KLM 5;
		CPOS N -1;
		Stop;
	Death.Fire:
		CPOS H 5
		{
			A_SetTranslation("CharredTrans");
			A_GiveToTarget("ChaingunnersKilled");
			A_GiveToTarget("FinisherToken",12);
		}
		CPOS I 5 A_Scream;
		CPOS J 5 A_NoBlocking;
		CPOS KLM 5;
		CPOS N -1;
		Stop;
	XDeath:
		CPOS O 5
		{
			A_GiveToTarget("ChaingunnersKilled");
			A_GiveToTarget("FinisherToken",12);
		}
		CPOS P 5 A_XScream;
		CPOS Q 5 A_NoBlocking;
		CPOS RS 5;
		CPOS T -1;
		Stop;
	XDeath.HolyWater:
		CPOS O 5
		{
			A_SetTranslation("HolyWaterTrans");
			A_GiveToTarget("ChaingunnersKilled");
			A_GiveToTarget("FinisherToken",12);
		}
		CPOS P 5 A_XScream;
		CPOS Q 5 A_NoBlocking;
		CPOS RS 5;
		CPOS T -1;
		Stop;
	XDeath.Fire:
		CPOS O 5
		{
			A_SetTranslation("CharredTrans");
			A_GiveToTarget("ChaingunnersKilled");
			A_GiveToTarget("FinisherToken",12);
		}
		CPOS P 5 A_XScream;
		CPOS Q 5 A_NoBlocking;
		CPOS RS 5;
		CPOS T -1;
		Stop;
	Death.Sploder:
	XDeath.Sploder:
		CPOS G 2 A_Pain;
		CPOS GGGGGGGGGG 5;
		CPOS O 5
		{
			A_GiveToTarget("ChaingunnersKilled");
			A_GiveToTarget("FinisherToken",12);
			A_SpawnItemEx("Explosion",0,0,35);
			//if(FindInventory("ChainExploder")) { A_RadiusGive("ChainExploder",192,RGF_MONSTERS); }
		}
		CPOS P 5
		{
			A_XScream();
			A_Explode(666,192,XF_NOTMISSILE);
		}
		CPOS Q 5 A_NoBlocking;
		CPOS RS 5;
		CPOS T -1;
		Stop;
	Raise:
		CPOS N 5 A_SetTranslation("ResetTrans");
		CPOS MLKJIH 5;
		Goto See;
	}
}
