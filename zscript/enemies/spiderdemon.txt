class SGDSpiderMastermind : SGDMonster replaces SpiderMastermind
{
	Default
	{
		Health 3000;
		Radius 128;
		Height 100;
		Mass 1000;
		Speed 12;
		PainChance 40;
		+BOSS;
		+MISSILEEVENMORE;
		+NORADIUSDMG;
		+DONTMORPH;
		+BOSSDEATH;
		SeeSound "spider/sight";
		AttackSound "minigun/fire";
		PainSound "spider/pain";
		DeathSound "spider/death";
		ActiveSound "spider/active";
		Obituary "$OB_SPIDER";
		PainChance "Fire", 50;
		PainChance "HolyWater", 64;
		DamageFactor "Sawblade", 2.5;	// To prevent excessive life leeching with the Chainsaw Level 2 finisher.
	}
	States
	{
	Spawn:
		//SPID A 0 A_JumpIf(GetCVar("sgd_spawnbehavior") == 1,"AltSpawn");
		SPID AB 10 A_Look;
		Loop;
	AltSpawn:
		SPID A 3 A_Metal;
		SPID ABB 3 A_Wander;
		SPID C 3 A_Metal;
		SPID CDD 3 A_Wander;
		SPID E 3 A_Metal;
		SPID EFF 3 A_Wander;
		SPID A 0 A_Look;
		Loop;
	See:
		SPID A 3 A_Metal;
		SPID ABB 3 A_Chase;
		SPID C 3 A_Metal;
		SPID CDD 3 A_Chase;
		SPID E 3 A_Metal;
		SPID EFF 3 A_Chase;
		Loop;
	Missile:
		SPID A 0 { if(CVar.FindCVar('sgd_hitscanbehavior').GetInt() == 1) { SetStateLabel("AltMissile"); }}
		SPID A 0 A_FaceTarget;
		SPID A 30 BRIGHT A_StartSound("minigun/windup");
		SPID G 4 BRIGHT A_SPosAttackUseAtkSound;
		SPID H 4 BRIGHT A_SposAttackUseAtkSound;
		SPID H 1 BRIGHT A_SpidRefire;
		Goto Missile+3;
	AltMissile:
		SPID A 0 A_FaceTarget;
		SPID A 30 BRIGHT A_StartSound("minigun/windup");
		SPID GG 2 BRIGHT A_PosAltAttack;
		SPID HH 2 BRIGHT A_PosAltAttack;
		SPID H 1 BRIGHT A_SpidRefire;
		Goto AltMissile+2;
	Pain:
		SPID I 3;
		SPID I 3 A_Pain;
		Goto See;
	Pain.HolyWater:
		SPID I 3 A_SetTranslation("HolyWaterTrans");
		SPID I 3 A_Pain;
		Goto See;
	Pain.Fire:
		SPID I 3 A_SetTranslation("CharredTrans");
		SPID I 3 A_Pain;
		Goto See;
	Death:
		SPID J 0
		{
			A_GiveToTarget("SpiderMastermindsKilled");
			A_GiveToTarget("FinisherToken",100);
		}
		SPID J 20 A_Scream;
		SPID K 10 A_NoBlocking;
		SPID LMNOPQR 10;
		SPID S 30;
		SPID S -1 A_BossDeath;
		Stop;
	Death.HolyWater:
		SPID J 0
		{
			A_SetTranslation("HolyWaterTrans");
			A_GiveToTarget("SpiderMastermindsKilled");
			A_GiveToTarget("FinisherToken",100);
		}
		SPID J 20 A_Scream;
		SPID K 10 A_NoBlocking;
		SPID LMNOPQR 10;
		SPID S 30;
		SPID S -1 A_BossDeath;
		Stop;
	Death.Fire:
		SPID J 0
		{
			A_SetTranslation("CharredTrans");
			A_GiveToTarget("SpiderMastermindsKilled");
			A_GiveToTarget("FinisherToken",100);
		}
		SPID J 20 A_Scream;
		SPID K 10 A_NoBlocking;
		SPID LMNOPQR 10;
		SPID S 30;
		SPID S -1 A_BossDeath;
		Stop;
	Death.Sploder:
		SPID I 2 A_Pain;
		SPID IIIIIIIIII 5;
		SPID J 0
		{
			A_GiveToTarget("SpiderMastermindsKilled");
			A_GiveToTarget("FinisherToken",100);
			
			for(int a = 0; a < 4; a++)
			{
				A_SpawnItemEx("Explosion",random(-35,35),random(-35,35),random(48,75));
			}
		}
		SPID J 20
		{
			A_Scream();
			A_Explode(666,192,XF_NOTMISSILE);
		}
		SPID K 10 A_NoBlocking;
		SPID LMNOPQR 10;
		SPID S 30;
		SPID S -1 A_BossDeath;
		Stop;
	}
}
