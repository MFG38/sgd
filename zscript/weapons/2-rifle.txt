class SGDRifle : SGDWeapon
{
	Default
	{
		Weapon.SlotNumber 2;
		Weapon.SelectionOrder 400;
		Weapon.AmmoType "RifleAmmo";
		Weapon.AmmoGive 16;		// Only ever dropped by Zombiemen upon death, so it actually gives 8 ammo.
		Weapon.AmmoUse 1;
		Tag "$SGD_WEP_RIFLE";
		Inventory.PickupMessage "$SGD_WEP_RIFLE";
		Inventory.Icon "ICON_ARF";
	}

	States
	{
	Spawn:
		RGUP A -1;
		Stop;
	Select:
		RGUN A 1 A_FastRaise;
		Goto Select;
	Deselect:
		RGUN A 1 A_FastLower;
		Goto Deselect;
	Ready:
		RGUN A 0;
		Goto ReadyLoop;
	Fire:
		RGUN B 0 A_JumpIfInventory("Rifle_FireRate",1,"FireUpgraded");
		RGUN B 3 A_RifleFire;
		RGUN C 3;
		RGUN A 4;
		Goto ReadyLoop;
	FireUpgraded:
		RGUN B 2 A_RifleFire;
		RGUN C 2;
		RGUN A 2;
		Goto ReadyLoop;
	FinisherFail:
		RGUN A 0;
		Goto ReadyLoop;
	Finisher1:
		TNT1 A 0 A_BeginFinisher(false);
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 8;
		RGUN A 0 A_EndFinisher;
		Goto ReadyLoop;
	Finisher2:
		TNT1 A 0 A_BeginFinisher(false);
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 12;
		RGUN A 0 A_EndFinisher;
		Goto ReadyLoop;
	Finisher3:
		TNT1 A 0 A_BeginFinisher(false);
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 3;
		RGUN B 1
		{
			A_RifleClusterShot();
			A_SetPitch(pitch-0.5,SPF_INTERPOLATE);
		}
		RGUN B 1 A_SetPitch(pitch-0.3,SPF_INTERPOLATE);
		RGUN B 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.15,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.075,SPF_INTERPOLATE);
		RGUN C 1 A_SetPitch(pitch-0.038,SPF_INTERPOLATE);
		RGUN A 20;
		RGUN A 0 A_EndFinisher;
		Goto ReadyLoop;
	}
}

extend class SGDRifle
{
	action void A_RifleFire()
	{
		if (player == null)
		{
			return;
		}

		Weapon weap = player.ReadyWeapon;
		if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
		{
			if (!weap.DepleteAmmo (weap.bAltFire, true, 1))
			{
				return;
			}	
			player.SetPsprite(PSP_FLASH, weap.FindState('Flash'), true);
		}
		player.mo.PlayAttacking2();

		A_StartSound("rifle/fire",CHAN_WEAPON);

		int dmg = random(3,5) * 4;
		double xspread;
		double yspread;
		
		if(FindInventory("Rifle_Accuracy"))
		{
			xspread = angle + random2() * (1.6 / 256);
			yspread = pitch + random2() * (1.2 / 256);
		}
		else
		{
			xspread = angle + random2() * (3.625 / 256);
			yspread = pitch + random2() * (2.75 / 256);
		}
		
		A_AlertMonsters();
		LineAttack(xspread,1280,yspread,dmg,'Normal',"BulletPuff");
		ACS_NamedExecute("FeatTracker",0);
	}
	
	action void A_RifleClusterShot()
	{
		if (player == null)
		{
			return;
		}

		Weapon weap = player.ReadyWeapon;
		if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
		{
			if (!weap.DepleteAmmo (weap.bAltFire, true, 1))
			{
				return;
			}	
			player.SetPsprite(PSP_FLASH, weap.FindState('Flash'), true);
		}
		player.mo.PlayAttacking2();

		A_AlertMonsters();
		A_StartSound("coachgun/fire",CHAN_WEAPON);
		
		for(int i = 0; i < 20; i++)
		{
			int dmg = 20 + (random(0,3) * 4);
			double xspread = angle + random2() * (12.875 / 256);
			double yspread = pitch + random2() * (9.865 / 256);
			
			LineAttack(xspread,MISSILERANGE,yspread,dmg,'Normal',"BulletPuff");
		}
		ACS_NamedExecute("FeatTracker",0);
	}
}
