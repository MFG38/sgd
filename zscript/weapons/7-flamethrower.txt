class SGDFlamethrower : SGDWeapon
{
	Default
	{
		Weapon.SlotNumber 7;
		Weapon.SelectionOrder 180;
		Weapon.AmmoType "FTAmmo";
		Weapon.AmmoGive 90;
		Weapon.AmmoUse 1;
		Tag "$SGD_WEP_FLAMETHROWER";
		Inventory.PickupMessage "$SGD_WEP_FLAMETHROWER";
	}
	
	States
	{
	Spawn:
		WFLM A -1;
		Stop;
	Select:
		TNT1 AAA 0 A_Raise;
		FLMG A 1 A_Raise;
		Goto Select+2;
	Deselect:
		TNT1 AAA 0 A_Lower;
		FLMG A 1 A_Lower;
		Goto Deselect+2;
	Ready:
		FLMG A 0;
		Goto ReadyLoop;
	ReadyLoop:
		FLMG BCD 2
		{
			A_WeaponReady();
			ACS_NamedExecute("FeatTracker",0);
		}
		Loop;
	Fire:
		FLMG E 2 A_FlamerAttack;
		FLMG F 2 A_FlamerAttack;
		FLMG G 2 A_FlamerAttack;
		FLMG H 2 A_FlamerAttack;
		FLMG H 0 A_ReFire;
		FLMG A 4;
		Goto ReadyLoop;
	FinisherFail:
		FLMG A 0;
		Goto ReadyLoop;
	Finisher1:
		TNT1 A 0 A_BeginFinisher(false);
		FLMG EF 2;
		FLMG G 2 A_SpitFlameWall;
		FLMG HBCD 2;
		FLMG A 0 A_EndFinisher;
		Goto ReadyLoop;
	Finisher2:
		TNT1 A 0 A_BeginFinisher(false);
		FLMG EF 2;
		FLMG G 2 A_SpitABFlameWall;
		FLMG HBCDBCD 2;
		FLMG A 0 A_EndFinisher;
		Goto ReadyLoop;
	Finisher3:
		TNT1 A 0 A_BeginFinisher(false);
		FLMG EEFFGGEEFFGGEEFFGGEEFFGGEEFFGGEEFFGGEEFFGGEEFFGGEEFFGGEEFFGG 1 A_FireCBeam;
		FLMG HBCDBCD 2;
		FLMG A 0 A_EndFinisher;
		Goto ReadyLoop;
	}
}

class FlamethrowerFire : Actor
{
	Default
	{
		Height 8;
		Radius 4;
		DamageFunction (random(5,8) * 2);
		Speed 10;
		RenderStyle "Translucent";
		Alpha 0.8;
		DeathSound "flamethrower/hit";
		DamageType "Fire";
		PROJECTILE;
		+NODAMAGETHRUST;
	}
	
	States
	{
	Spawn:
		FRFX AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPP 1 BRIGHT A_FadeOut(0.032);
		Stop;
	Death:
		TNT1 A 0;
		Stop;
	}
}

class FlamethrowerFire_Linger : FlamethrowerFire
{
	States
	{
	Spawn:
		FRFX AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPP 1 BRIGHT A_FadeOut(0.032);
		Stop;
	Death:
		FLME A 0
		{
			bNOGRAVITY = false;
		}
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2 A_Explode(5,32,XF_NOTMISSILE);
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2 A_Explode(5,32,XF_NOTMISSILE);
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2 A_Explode(5,32,XF_NOTMISSILE);
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2 A_Explode(5,32,XF_NOTMISSILE);
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2
		{
			A_Explode(4,32,XF_NOTMISSILE);
			A_FadeOut(0.018);
		}
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2
		{
			A_Explode(3,32,XF_NOTMISSILE);
			A_FadeOut(0.018);
		}
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2 A_FadeOut(0.018);
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2 A_FadeOut(0.018);
		Stop;
	}
}

class FlamethrowerCBeam : FlamethrowerFire_Linger
{
	Default
	{
		Speed 32;
		DamageFunction 50;
	}
	
	States
	{
	Spawn:
		FRFX AABB 1 BRIGHT;
		Loop;
	}
}

class FlamethrowerFlameWall : Actor
{
	Default
	{
		Height 40;
		Radius 8;
		DamageFunction (20 + (random(0,5) * 4));
		Speed 16;
		RenderStyle "Translucent";
		Alpha 0.8;
		DeathSound "flamethrower/hit";
		DamageType "Fire";
		PROJECTILE;
		+NODAMAGETHRUST;
		+FLOORHUGGER;
	}
	
	States
	{
	Spawn:
		FLME AABBCCDDEEFFGGHHIIJJKKLLMMNN 1 BRIGHT { if(CVar.FindCVar('sgd_spawntrails').GetBool() == 1) { A_SpawnItemEx("FlamethrowerFinisherFlameTrail"); }}
		Loop;
	Death:
		TNT1 A 0;
		Stop;
	}
}

class FlamethrowerFlameWallAfterburner : FlamethrowerFlameWall
{	
	Default
	{
		DamageFunction 8;
		//+SEEKERMISSILE;
		+SCREENSEEKER;
		Scale 1.25;
		Height 50;
		Radius 10;
		MaxTargetRange 4;
	}
	
	States
	{
	Spawn:
		FLME AABBCCDDEEFFGGHHIIJJKKLLMMNN 1 BRIGHT
		{
			A_SeekerMissile(1,4,SMF_LOOK,180,4);
			if(CVar.FindCVar('sgd_spawntrails').GetBool() == 1) { A_SpawnItemEx("FlamethrowerFinisherFlameTrail"); }
		}
		Loop;
	Death:
		TNT1 A 0 { if(tracer) { SetStateLabel("Afterburn"); }}
		Stop;
	Afterburn:
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2
		{
			bFLOORHUGGER = false;
			if(tracer) { SetOrigin(tracer.pos,true); }
			A_Explode(8,40,XF_NOTMISSILE);
		}
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2
		{
			if(tracer) { SetOrigin(tracer.pos,true); }
			A_Explode(8,40,XF_NOTMISSILE);
		}
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2
		{
			if(tracer) { SetOrigin(tracer.pos,true); }
			A_Explode(8,40,XF_NOTMISSILE);
		}
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2
		{
			if(tracer) { SetOrigin(tracer.pos,true); }
			A_Explode(8,40,XF_NOTMISSILE);
		}
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2
		{
			if(tracer) { SetOrigin(tracer.pos,true); }
			A_Explode(6,40,XF_NOTMISSILE);
			A_FadeOut(0.018);
		}
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2
		{
			if(tracer) { SetOrigin(tracer.pos,true); }
			A_Explode(5,40,XF_NOTMISSILE);
			A_FadeOut(0.018);
		}
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2 A_FadeOut(0.018);
		FLME A 0 A_StartSound("fx/fireburn");
		FLME ABCDEFGHIJKLMN 2 A_FadeOut(0.018);
		Stop;
	}
}

extend class SGDFlamethrower
{
	action void A_FlamerAttack()
	{
		Weapon weap = player.ReadyWeapon;
		if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
		{
			if (!weap.DepleteAmmo (weap.bAltFire, true, 1))
				return;	
		}
		
		A_AlertMonsters();
		A_StartSound("flamethrower/fire",CHAN_WEAPON);
		
		if(FindInventory("Flamethrower_FlameLinger"))
		{
			SpawnPlayerMissile("FlamethrowerFire_Linger");
		}
		else
		{
			SpawnPlayerMissile("FlamethrowerFire");
		}
		
		ACS_NamedExecute("FeatTracker",0);
	}
	
	action void A_SpitFlameWall()
	{
		SpawnPlayerMissile("FlamethrowerFlameWall",angle);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle+2.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle+4.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle+6.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle+8.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle+10.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle+12.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle+14.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle+16.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle-2.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle-4.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle-6.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle-8.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle-10.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle-12.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle-14.0);
		SpawnPlayerMissile("FlamethrowerFlameWall",angle-16.0);
		A_AlertMonsters();
		ACS_NamedExecute("FeatTracker",0);
	}
	
	action void A_SpitABFlameWall()
	{
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle+2.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle+4.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle+6.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle+8.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle+10.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle+12.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle+14.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle+16.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle-2.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle-4.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle-6.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle-8.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle-10.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle-12.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle-14.0);
		SpawnPlayerMissile("FlamethrowerFlameWallAfterburner",angle-16.0);
		A_AlertMonsters();
		ACS_NamedExecute("FeatTracker",0);
	}
	
	action void A_FireCBeam()
	{
		SpawnPlayerMissile("FlamethrowerCBeam");
		A_AlertMonsters();
		ACS_NamedExecute("FeatTracker",0);
	}
}
