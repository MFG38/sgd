class SGDChainsaw : SGDWeapon
{
	Default
	{
		Weapon.SlotNumber 0;
		Weapon.SelectionOrder 700;
		Weapon.Kickback 0;
		Weapon.UpSound "chainsaw/up";
		Tag "$SGD_WEP_CHAINSAW";
		Inventory.PickupMessage "$SGD_WEP_CHAINSAW";
		+WEAPON.MELEEWEAPON;
		+WEAPON.AMMO_OPTIONAL;
	}

	States
	{
	Spawn:
		MAGS E -1;
		Stop;
	Select:
		TNT1 AAA 0 A_Raise;
		MAGS A 1 A_Raise;
		Goto Select+2;
	Deselect:
		TNT1 AAA 0 A_Lower;
		MAGS A 1 A_Lower;
		Goto Deselect+2;
	Ready:
		MAGS C 0;
		Goto ReadyLoop;
	ReadyLoop:
		MAGS CD 4
		{
			A_WeaponReady();
			A_StartSound("chainsaw/idle",CHAN_WEAPON);
			ACS_NamedExecute("FeatTracker",0);
		}
		Loop;
	Fire:
		MAGS AB 3 A_ChainsawAttack;
		Goto ReadyLoop;
	FinisherFail:
		MAGS A 0;
		Goto ReadyLoop;
	Finisher1:		// A slightly modified version of an idea by InfernalMonsoon.
		TNT1 A 0 A_BeginFinisher(false);
		MAGS ABABABABABABABABABABABABABABABABABABABABABABABABABABAB 2
		{
			A_ChainsawAttack();
			A_FireNail();
		}
		MAGS A 0 A_EndFinisher;
		Goto ReadyLoop;
	Finisher2:		// Credit to InfernalMonsoon for coming up with this!
		TNT1 A 0 A_BeginFinisher(false);
		MAGS A 3 SpawnPlayerMissile("ChainsawHomingCBlade");
		MAGS BAB 3;
		MAGS A 0 A_EndFinisher;
		Goto ReadyLoop;
	Finisher3:		// A modified version of an idea by InfernalMonsoon.
		TNT1 A 0 A_BeginFinisher(false);
		MAGS A 3
		{
			A_SpawnItemEx("ChainsawOrbitingCBlade",80,0,27,angle:0);
			A_SpawnItemEx("ChainsawOrbitingCBlade",80,0,27,angle:60);
			A_SpawnItemEx("ChainsawOrbitingCBlade",80,0,27,angle:120);
			A_SpawnItemEx("ChainsawOrbitingCBlade",80,0,27,angle:180);
			A_SpawnItemEx("ChainsawOrbitingCBlade",80,0,27,angle:240);
			A_SpawnItemEx("ChainsawOrbitingCBlade",80,0,27,angle:300);
		}
		MAGS BABAB 3;
		MAGS A 0 A_EndFinisher;
		Goto ReadyLoop;
	}
}

class ChainsawNail : Actor
{
	Default
	{
		PROJECTILE;
		Radius 3;
		Height 3;
		Speed 45;
		DamageFunction (24 + (random(0,4) * 3));
		Scale 0.75;
		DeathSound "chainsaw/nailhit";
	}

	States
	{
	Spawn:
		NLPJ A 1;
		Loop;
	Crash:
	Death:
		NLPJ BCDEFG 2;
		Stop;
  }
}

class ChainsawHomingCBlade : Actor
{
	Default
	{
		Height 2;
		Radius 15;
		Speed 30;
		Scale 0.5;
		DamageFunction 4;
		DamageType "Sawblade";
		PROJECTILE;
		//+SEEKERMISSILE;
		+SCREENSEEKER;
		+FLATSPRITE;
	}
	
	States
	{
	Spawn:
		CSWB AAAAAA 1
		{
			A_SeekerMissile(12,15,SMF_LOOK);
			A_SetAngle(angle-120);
			
			if(CVar.FindCVar('sgd_spawntrails').GetBool() == 1)
			{
				A_SpawnItemEx("ChainsawCBladeTrail");
			}
		}
		Loop;
	Death:
		CSWB A 0
		{
			if(tracer) { SetStateLabel("Grinder"); }
			else { SetStateLabel("AbsDeath"); }
		}
		Stop;
	Grinder:
		CSWB A 1
		{
			A_SetAngle(angle-120);
			
			if(tracer && tracer.health > 0)
			{
				SetOrigin(tracer.pos+(0,0,tracer.height*0.5),true);
				A_DamageTracer(4,"Sawblade");
				A_GiveToTarget("SGDHealthBonus");
			}
		}
		CSWB AAAAAAAAAAA 1
		{
			A_SetAngle(angle-120);
			
			if(tracer && tracer.health > 0)
			{
				SetOrigin(tracer.pos+(0,0,tracer.height*0.5),true);
				A_DamageTracer(4,"Sawblade");
			}
		}
		CSWB A 0
		{
			if(tracer.health > 0)
			{
				SetStateLabel("Grinder");
			}
			else { SetStateLabel("AbsDeath"); }
		}
		Stop;
	AbsDeath:
		TNT1 A 0;
		Stop;
	}
}

class ChainsawOrbitingCBlade : ChainsawHomingCBlade
{
	Default
	{
		Health 666;
		Speed 0;
		DamageFunction 12;
		-SCREENSEEKER;
		+RIPPER;
	}
	
	States
	{
	Spawn:
		CSWB AAAAAA 1
		{
			SetOrigin(target.pos+Vec3Angle(96,angle),true);
			A_DamageSelf(1);
			A_SetAngle(angle-120);
			
			if(CVar.FindCVar('sgd_spawntrails').GetBool() == 1)
			{
				A_SpawnItemEx("ChainsawCBladeTrail");
			}
		}
		Loop;
	Death:
		TNT1 A 0;
		Stop;
	}
}

extend class SGDChainsaw
{	
	action void A_ChainsawAttack()
	{
		FTranslatedLineTarget t;
		
		if (player != null)
		{
			Weapon weap = player.ReadyWeapon;
			if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
			{
				if (!weap.DepleteAmmo (weap.bAltFire))
					return;
			}
		}
		
		int dmg;

		if(FindInventory("Chainsaw_Damage"))
		{
			dmg = 15 + (random(0,5) * 2);
		}
		else
		{
			dmg = 10 + random(0,5);
		}

		A_AlertMonsters();
		LineAttack(angle,64,pitch,dmg,'Melee',"BulletPuff",LAF_ISMELEEATTACK,t);
		
		if(t.linetarget)
		{
			A_StartSound("chainsaw/hit",CHAN_WEAPON);
		}
		else
		{
			A_StartSound("chainsaw/attack",CHAN_WEAPON);
		}
		
		ACS_NamedExecute("FeatTracker",0);
	}
	
	action void A_FireNail()
	{
		A_StartSound("chainsaw/nailfire",CHAN_5);
		SpawnPlayerMissile("ChainsawNail");
	}
}
