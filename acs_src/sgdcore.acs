#library "sgdcore"
#include "zcommon.acs"
#include "miscdef.acs"

//////////////////////
// PLAYER TID STUFF //
//////////////////////

script "SetPlayerTID_Enter" ENTER
{
	Thing_ChangeTID(0,PL_TIDSTART+PlayerNumber());
	
	if(GetCVar("sgd_debugmode") == true)
	{
		Log(s:"You exist.");
	}
}

script "SetPlayerTID_Death" DEATH
{
	Thing_ChangeTID(PL_TIDSTART+PlayerNumber(),0);

	if(GetCVar("sgd_debugmode") == true)
	{
		Log(s:"You don't exist.");
	}
}

script "SetPlayerTID_Respawn" RESPAWN
{
	Thing_ChangeTID(0,0);
	Thing_ChangeTID(0,PL_TIDSTART+PlayerNumber());
	
	if(GetCVar("sgd_debugmode") == true)
	{
		Log(s:"You exist again.");
	}
}

///////////////
// HUD STUFF //
///////////////

script "FinisherReadyMsg" ENTER
{
	while(GetCVar("sgd_finisherprompt") > 0)
	{
		SetHudSize(HUDSIZE_X,HUDSIZE_Y,0);
		SetFont("SMALLFONT");
	
		if(CheckInventory("FinisherToken") >= 300 && CheckInventory("FinisherToken") < 600)
		{
			HudMessage(s:"LEVEL 1 FINISHER READY";HUDMSG_PLAIN,500,CR_GREEN,CENTER_X,448.0,0.1);
			if(GetCVar("sgd_finisherprompt") == 2)
			{
				HudMessage(s:"PRESS ",k:"+altattack",s:" TO USE";HUDMSG_PLAIN,501,CR_GREEN,CENTER_X,455.0,0.1);
			}
		}
		else if(CheckInventory("FinisherToken") >= 600 && CheckInventory("FinisherToken") < 900)
		{
			HudMessage(s:"LEVEL 2 FINISHER READY";HUDMSG_PLAIN,500,CR_GREEN,CENTER_X,448.0,0.1);
			if(GetCVar("sgd_finisherprompt") == 2)
			{
				HudMessage(s:"PRESS ",k:"+altattack",s:" TO USE";HUDMSG_PLAIN,501,CR_GREEN,CENTER_X,455.0,0.1);
			}
		}
		else if(CheckInventory("FinisherToken") >= 900)
		{
			HudMessage(s:"LEVEL 3 FINISHER READY";HUDMSG_PLAIN,500,CR_GREEN,CENTER_X,448.0,0.1);
			if(GetCVar("sgd_finisherprompt") == 2)
			{
				HudMessage(s:"PRESS ",k:"+altattack",s:" TO USE";HUDMSG_PLAIN,501,CR_GREEN,CENTER_X,455.0,0.1);
			}
		}
		Delay(6);
	}
	Delay(1);
	Restart;
}

/* script "WeaponAcquiredMsg" (int weapon)
// This was a bad idea.
{
	str WeaponClass;
	str WeaponName;
	str WeaponFullName = StrParam(s:"SGD_WEP_",s:WeaponName);
	
	switch(weapon)
	{
		case 3:
			WeaponClass = "SGDShotgun";
			WeaponName = "SHOTGUN";
			break;
		case 4:
			WeaponClass = "SGDSuperShotgun";
			WeaponName = "SSG";
			break;
		case 5:
			WeaponClass = "SGDMinigun";
			WeaponName = "MINIGUN";
			break;
		case 6:
			WeaponClass = "SGDBazooka";
			WeaponName = "BAZOOKA";
			break;
		case 7:
			WeaponClass = "SGDFlamethrower";
			WeaponName = "FLAMETHROWER";
			break;
		case 8:
			WeaponClass = "SGDArgentRifle";
			WeaponName = "ARGENTRIFLE";
			break;
		case 9:
			WeaponClass = "SGDDarkMatterCannon";
			WeaponName = "DMCANNON";
			break;
		case 0:
			WeaponClass = "SGDChainsaw";
			WeaponName = "CHAINSAW";
			break;
		default:
			WeaponClass = "SGDRifle";
			WeaponName = "RIFLE";
	}
	
	if(!CheckInventory(WeaponClass))
	{
		SetHudSize(HUDSIZE_X,HUDSIZE_Y,0);
		SetFont("BIGFONT");
		HudMessage(s:"NEW WEAPON ACQUIRED: ",l:WeaponFullName;
			HUDMSG_TYPEON,200,CR_RED,CENTER_X,45.0,4.0,FRAME,2.0);
	}
} */

/////////////////////
// INVENTORY STUFF //
/////////////////////

script "ResetInventory" UNLOADING
{
	TakeInventory("FinisherToken",ALL);
	TakeInventory("FieldMedPack",ALL);
	TakeInventory("DemonizerPowerup",ALL);
	TakeInventory("HolyWaterGrenadePickup",ALL);
	TakeInventory("DemonizerTimer",ALL);
	TakeInventory("SGDRadSuit",ALL);
	TakeInventory("RadSuitGiver",ALL);
	TakeInventory("RadSuitTimer",ALL);
	TakeInventory("SGDLightAmpGoggles",ALL);
	TakeInventory("LightAmpGogglesGiver",ALL);
	TakeInventory("GogglesActive",ALL);
}

script "ArgentRifleCooldown" ENTER
{
	if(!CheckWeapon("SGDArgentRifle") && CheckInventory("ArgentRifleHeat") > 0)
	{
		TakeInventory("ArgentRifleHeat",1);
		
		if(GetCVar("sgd_debugmode") == true)
		{
			Log(s:"Argent rifle heat level: ",i:CheckInventory("ArgentRifleHeat"));
		}
	}
	
	if(!CheckInventory("ArgentRifle_Cooldown"))
	{
		Delay(24);
	}
	else
	{
		Delay(18);
	}
	Restart;
}

script "FTokenDecay" ENTER
{
	if(CheckInventory("FinisherToken") > 0)
	{
		TakeInventory("FinisherToken",1);
	}
	Delay(SEC);
	Restart;
}

script "FieldMedHeal" (void)
{
	int CurHealth = GetActorProperty(PL_TIDSTART+PlayerNumber(),APROP_HEALTH);
	int MaxHealth = GetActorProperty(PL_TIDSTART+PlayerNumber(),APROP_SPAWNHEALTH);
	int AmtToHeal;
	
	if(CurHealth < MaxHealth)
	{
		AmtToHeal = MaxHealth - CurHealth;
		
		if(CheckInventory("FieldMedPack") <= AmtToHeal)
		{
			/* if(GameSkill() == 6)	// Jesus, what a workaround. Still not perfect, but close enough.
			{
				GiveInventory("Health",CheckInventory("FieldMedPack") + (CheckInventory("FieldMedPack") / 3));
				TakeInventory("FieldMedPack",CheckInventory("FieldMedPack"));
			}
			else
			{
				GiveInventory("Health",CheckInventory("FieldMedPack"));
				TakeInventory("FieldMedPack",CheckInventory("FieldMedPack"));
			} */
			GiveInventory("Health",CheckInventory("FieldMedPack"));
			TakeInventory("FieldMedPack",CheckInventory("FieldMedPack"));
		}
		else
		{
			/* if(GameSkill() == 6)
			{
				GiveInventory("Health",AmtToHeal + (AmtToHeal / 3));
				TakeInventory("FieldMedPack",AmtToHeal);
			}
			else
			{
				GiveInventory("Health",AmtToHeal);
				TakeInventory("FieldMedPack",AmtToHeal);
			} */
			GiveInventory("Health",AmtToHeal);
			TakeInventory("FieldMedPack",AmtToHeal);
		}
	}
}

///////////
// MISC. //
///////////

script "InitFinisher" (int freeze)	// Why can't booleans work in these?
{
	GiveInventory("FinisherInvul",1);
	TakeInventory("FinisherToken",ALL);
	
	if(freeze > 0)
	{
		SetPlayerProperty(0,1,PROP_FROZEN);
	}
}

script "EndFinisher" (void)
{
	TakeInventory("FinisherInvul",1);
	SetPlayerProperty(0,0,PROP_FROZEN);
}

script "Demonizer_SoundAndVision" (void)
{
	GiveInventory("DemonVisionEffect",1);
	GiveInventory("DemonizerTimer",DEMONTIME);
	LocalSetMusic("BFG_DIV");
	
	while(CheckInventory("DemonizerTimer") > 0)
	{
		TakeInventory("DemonizerTimer",1);
		Delay(1);
	}
	
	//Delay(60*SEC);
	TakeInventory("DemonVisionEffect",1);
	LocalSetMusic("*");
}

script "RadSuitStuff" (void)
{
	GiveInventory("RadSuitColorSetter",1);
	GiveInventory("RadSuitTimer",RADSUITTIME);
	
	while(CheckInventory("RadSuitTimer") > 0)
	{
		TakeInventory("RadSuitTimer",1);
		Delay(1);
		if(GetCVar("sgd_hswarningsound") == true)
		{
			if(CheckInventory("RadSuitTimer") == 175)	{ PlaySound(0,"hazmat/warning"); }
			if(CheckInventory("RadSuitTimer") == 140)	{ PlaySound(0,"hazmat/warning"); }
			if(CheckInventory("RadSuitTimer") == 105)	{ PlaySound(0,"hazmat/warning"); }
			if(CheckInventory("RadSuitTimer") == 70)	{ PlaySound(0,"hazmat/warning"); }
			if(CheckInventory("RadSuitTimer") == 35)	{ PlaySound(0,"hazmat/warning"); }
		} 
	}
	
	TakeInventory("RadSuitColorSetter",1);
}

script "GoggleTaker" (void)
{
	while(CheckInventory("GogglesActive"))
	{
		TakeInventory("SGDLightAmpGoggles",1);
		Delay(42);
	}
	TakeInventory("LightAmpGogglesGiver",1);
	TakeInventory("GogglesActive",1);
}

script "LowHealthFlash" ENTER
{
	int threshold = GetCVar("sgd_lowhpflash_thres");
	int intensity = GetCVar("sgd_lowhpflash_int");
	
	if(GetCVar("sgd_lowhpflash_on") == true)
	{
		if(GetActorProperty(PL_TIDSTART+PlayerNumber(),APROP_HEALTH) <= threshold && GetActorProperty(PL_TIDSTART+PlayerNumber(),APROP_HEALTH) > 0)
		{
			FadeTo(255,0,0,intensity,0.6);
			Delay(21);
			FadeTo(255,0,0,0.0,0.6);
			Delay(21);
		}
		Delay(1);
		Restart;
	}
}

/* script "FTokenDebug" ENTER
{
	SetHudSize(HUDSIZE_X,HUDSIZE_Y,0);
	SetFont("SMALLFONT");
	
	while(GetCVar("sgd_debugmode") == true)
	{	
		HudMessage(i:CheckInventory("FinisherToken");HUDMSG_PLAIN,99,CR_RED,20.0,20.0,TIC);
		Delay(1);
	}
} */
